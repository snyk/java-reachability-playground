name: Complete Devseops Pipleline
on: push
jobs:
    Lint-Code: # For Source Code Analysis .Prevents broken code to be updated in main branch .Establish coding best practice.
     runs-on: ubuntu-latest
     steps:
        - name: Checkout code
          uses: actions/checkout@v4
        - name: Super-linter
          uses: super-linter/super-linter@v6.0.0  # release-version
          env:
            DEFAULT_BRANCH: master
            DISABLE_ERRORS: false
            VALIDATE_ALL_CODEBASE: true
            VALIDATE_JAVA: true
            # To report GitHub Actions status checks
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    Build-Code: #Build phase 
     runs-on: ubuntu-latest
     steps:
            -   name: 'Checkout Repo'
                uses: actions/checkout@v4
            -   name: 'Setup JDK 21'
                uses: actions/setup-java@v4
                with:
                 distribution: 'temurin' # Provides code and processes for building runtime binaries
                 java-version: '21'
                 server-id: github
                 settings-path: ${{github.workspace}} #Location for seting.xml file
                 cache: maven
            -    name: Set up Maven
                 uses: stCarolas/setup-maven@v4.5
                 with:
                      maven-version: 3.8.2
                #Sonar Cloud : Detects bugs, vulnerabilities and code smells  (Continuous Code Quality & Code Security)
            -   name: Build with Maven
                run: | 
                        mvm verify sonar:sonar \
                        -Dsonar.organization=SonarAnalysisAR \
                        -Dsonar.projectKey=sonaranalysisar_codered \
                        -Dsonar.host.url=https://sonarcloud.io
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
                    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
                    
    Security-Scan:
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@master
          - name: Run Snyk to check for vulnerability
            uses: snyk/actions/maven@master
            continue-on-error: true
            env:
              SNYK_TOKEN: ${{ secrets.SYNK_TOKEN }}
            with:
              args: --sarif-file-output=snyk.sarif
          - name: Upload result to GitHub Code Scanning
            uses: github/codeql-action/upload-sarif@v2
            with:
              sarif_file: snyk.sarif
          - name: Run Snyk to check Docker image for vulnerabilities
            uses: snyk/actions/docker@master
            continue-on-error: true
            env:
              SNYK_TOKEN: ${{ secrets.SYNK_TOKEN }}
            with:
              image: alpine/helm

    zap_scan:
        runs-on: ubuntu-latest
        name: Scan the webapplication
        steps:
        - name: Checkout
          uses: actions/checkout@v2
          with:
            ref: master
        - name: ZAP Scan
          uses: zaproxy/action-baseline@v0.11.0
          with:
            token: ${{ secrets.GITHUB_TOKEN }}
            docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
            target: 'http://testasp.vulnweb.com'
            rules_file_name: '.zap/rules.tsv'
            cmd_options: '-a'                       
    
        


